/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as DepartmentsIndexImport } from './routes/departments/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const DepartmentsIndexRoute = DepartmentsIndexImport.update({
  id: '/departments/',
  path: '/departments/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/departments/': {
      id: '/departments/'
      path: '/departments'
      fullPath: '/departments'
      preLoaderRoute: typeof DepartmentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/departments': typeof DepartmentsIndexRoute
  '/users': typeof UsersIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/departments': typeof DepartmentsIndexRoute
  '/users': typeof UsersIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/departments/': typeof DepartmentsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/departments' | '/users' | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/departments' | '/users' | '/auth/login'
  id: '__root__' | '/' | '/departments/' | '/users/' | '/auth/login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DepartmentsIndexRoute: typeof DepartmentsIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DepartmentsIndexRoute: DepartmentsIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/departments/",
        "/users/",
        "/auth/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/departments/": {
      "filePath": "departments/index.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
